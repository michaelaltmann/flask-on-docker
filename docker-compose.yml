version: "3.7"
# Docker compose for a network with a database and two web apps

services:
  # A web app with server-side rendering that use a db
  web:
    build: ./services/web
    command: python manage.py run -h 0.0.0.0
    volumes:
      - ./services/web/:/usr/src/app/
    ports:
      - 5000:5000
    env_file:
      - ./.env.dev.web
    depends_on:
      - db

  # The API for a web app with client-side rendering that use a db
  web2backend:
    build:
      context: ./services/web2/backend/
      dockerfile: Dockerfile
    volumes:
      - ./services/web2/backend:/usr/src/app/backend
    ports:
      - 5002:5002
    command: flask run --host=0.0.0.0 --port=5002
    env_file:
      - ./.env.dev.web2

  # The front end for a web app with client-side rendering that use a db
  web2frontend:
    build:
      context: ./services/web2/frontend/
      dockerfile: Dockerfile
    volumes:
      - ./services/web2/frontend:/usr/src/app/frontend
    ports:
      - 8080:8080
    env_file:
      - ./.env.dev.web2
    depends_on:
      - db

  # Postgres db that is shared by both web apps.
  db:
    image: arturhg/multi-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    environment:
      - PG_USERS=hello_flask,web2
      - PG_PASSWORDS=hello_flask,web2
      - PG_DATABASES=hello_flask_dev,web2_dev

volumes:
  postgres_data:
